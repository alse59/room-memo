package com.example.wataru.greendao.db;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.example.wataru.greendao.db.Object;
import com.example.wataru.greendao.db.HouseMovingCondition;
import com.example.wataru.greendao.db.PreviewConfirm;
import com.example.wataru.greendao.db.ObjectImage;

import com.example.wataru.greendao.db.ObjectDao;
import com.example.wataru.greendao.db.HouseMovingConditionDao;
import com.example.wataru.greendao.db.PreviewConfirmDao;
import com.example.wataru.greendao.db.ObjectImageDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig objectDaoConfig;
    private final DaoConfig houseMovingConditionDaoConfig;
    private final DaoConfig previewConfirmDaoConfig;
    private final DaoConfig objectImageDaoConfig;

    private final ObjectDao objectDao;
    private final HouseMovingConditionDao houseMovingConditionDao;
    private final PreviewConfirmDao previewConfirmDao;
    private final ObjectImageDao objectImageDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        objectDaoConfig = daoConfigMap.get(ObjectDao.class).clone();
        objectDaoConfig.initIdentityScope(type);

        houseMovingConditionDaoConfig = daoConfigMap.get(HouseMovingConditionDao.class).clone();
        houseMovingConditionDaoConfig.initIdentityScope(type);

        previewConfirmDaoConfig = daoConfigMap.get(PreviewConfirmDao.class).clone();
        previewConfirmDaoConfig.initIdentityScope(type);

        objectImageDaoConfig = daoConfigMap.get(ObjectImageDao.class).clone();
        objectImageDaoConfig.initIdentityScope(type);

        objectDao = new ObjectDao(objectDaoConfig, this);
        houseMovingConditionDao = new HouseMovingConditionDao(houseMovingConditionDaoConfig, this);
        previewConfirmDao = new PreviewConfirmDao(previewConfirmDaoConfig, this);
        objectImageDao = new ObjectImageDao(objectImageDaoConfig, this);

        registerDao(Object.class, objectDao);
        registerDao(HouseMovingCondition.class, houseMovingConditionDao);
        registerDao(PreviewConfirm.class, previewConfirmDao);
        registerDao(ObjectImage.class, objectImageDao);
    }
    
    public void clear() {
        objectDaoConfig.getIdentityScope().clear();
        houseMovingConditionDaoConfig.getIdentityScope().clear();
        previewConfirmDaoConfig.getIdentityScope().clear();
        objectImageDaoConfig.getIdentityScope().clear();
    }

    public ObjectDao getObjectDao() {
        return objectDao;
    }

    public HouseMovingConditionDao getHouseMovingConditionDao() {
        return houseMovingConditionDao;
    }

    public PreviewConfirmDao getPreviewConfirmDao() {
        return previewConfirmDao;
    }

    public ObjectImageDao getObjectImageDao() {
        return objectImageDao;
    }

}
